import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, mean_squared_error
import joblib

# Load dataset into a DataFrame
data = pd.read_csv('tire_life_data.csv')  # Assuming your data is in a CSV file

# Preview the data
print(data.head())

# Feature selection - Exclude 'Tire Life (days)' as it is the target variable
X = data.drop(columns=['Tire Life (days)', 'Tire ID', 'Date Installed', 'Date Removed'])
y = data['Tire Life (days)']

# Splitting the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardize the features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Initialize the Random Forest Regressor
model = RandomForestRegressor(n_estimators=100, random_state=42)

# Train the model
model.fit(X_train_scaled, y_train)

# Make predictions
y_pred = model.predict(X_test_scaled)

# Evaluate the model
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Absolute Error: {mae}')
print(f'Mean Squared Error: {mse}')

# Save the model and the scaler
joblib.dump(model, 'tire_life_model.pkl')
joblib.dump(scaler, 'scaler.pkl')

# Predicting new inputs
def predict_tire_life(new_input):
    # Load the model and the scaler
    model = joblib.load('tire_life_model.pkl')
    scaler = joblib.load('scaler.pkl')

    # Scale the new input
    new_input_scaled = scaler.transform([new_input])

    # Predict tire life
    predicted_life = model.predict(new_input_scaled)
    return predicted_life[0]

# Example usage: Replace the below list with new user inputs
new_input = [60000, 1000, 28, 33, 35, 'Muddy', 22, 6, 105, 25, 2]
predicted_life = predict_tire_life(new_input)
print(f'Predicted Tire Life: {predicted_life} days')